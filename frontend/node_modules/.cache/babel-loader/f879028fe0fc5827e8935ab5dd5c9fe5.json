{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\components\\\\NewTripForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createTrip } from \"../../services/tripsWs\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport LuggageIcon from \"@mui/icons-material/Luggage\";\nimport Stack from \"@mui/material/Stack\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewTripForm = _ref => {\n  _s();\n\n  let {\n    open,\n    setOpen,\n    ...props\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [tripName, setTripName] = useState(\"\");\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    setTripName(value);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason !== \"backdropClick\") {\n      setOpen(false);\n    }\n  };\n\n  const newTripSave = async () => {\n    const newTrip = {\n      title: tripName\n    };\n    createTrip(newTrip).then(response => {\n      setOpen(false);\n      window.location.reload();\n    }).catch(error => {\n      setError(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      disableEscapeKeyDown: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create a new Trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              minWidth: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              name: \"title\",\n              value: tripName,\n              onChange: handleChange,\n              label: \"Create a Trip\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(LuggageIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: newTripSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewTripForm, \"e6hbDzJDrAj8FieEcOuB/zo5B2s=\");\n\n_c = NewTripForm;\nexport default NewTripForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTripForm\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/components/NewTripForm/index.jsx"],"names":["useState","createTrip","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","TextField","LuggageIcon","Stack","InputAdornment","NewTripForm","open","setOpen","props","error","setError","tripName","setTripName","handleChange","event","value","target","handleClose","reason","newTripSave","newTrip","title","then","response","window","location","reload","catch","m","minWidth","startAdornment"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { createTrip } from \"../../services/tripsWs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport LuggageIcon from \"@mui/icons-material/Luggage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst NewTripForm = ({ open, setOpen, ...props }) => {\r\n  const [error, setError] = useState(null);\r\n  const [tripName, setTripName] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTripName(value);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const newTripSave = async () => {\r\n    const newTrip = {\r\n      title: tripName,\r\n    };\r\n\r\n    createTrip(newTrip)\r\n      .then((response) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Create a new Trip</DialogTitle>\r\n        <DialogContent>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"title\"\r\n                value={tripName}\r\n                onChange={handleChange}\r\n                label=\"Create a Trip\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LuggageIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={newTripSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTripForm;\r\n"]},"metadata":{},"sourceType":"module"}