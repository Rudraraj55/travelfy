{"ast":null,"code":"import { apiServer } from '../api/ServerAPI';\nimport { internalServerError, successStatus } from '../utils/clear-res';\nexport const createTrip = async data => {\n  try {\n    const res = await apiServer.post('/trips/create', data);\n    return successStatus(res);\n  } catch (error) {\n    return internalServerError(error);\n  }\n};\nexport const getAllTrips = async () => {\n  try {\n    const res = await apiServer.get('/trips');\n    return successStatus(res);\n  } catch (error) {\n    return internalServerError(error);\n  }\n};\nexport const getOneTrip = async (id, data) => {\n  try {\n    const res = await apiServer.get(`/trips/${id}`, data);\n    return successStatus(res);\n  } catch (error) {\n    return internalServerError(error);\n  }\n};\nexport const getAllPlacesFromTrip = async (id, data) => {\n  try {\n    const res = await apiServer.get(`/trips/${id}/places`, data);\n    return successStatus(res);\n  } catch (error) {\n    return internalServerError(error);\n  }\n};\nexport const updateTrip = async (id, data) => {\n  try {\n    const res = await apiServer.patch(`/trips/update/${id}`, data);\n    return successStatus(res);\n  } catch (error) {\n    return internalServerError(error);\n  }\n};\nexport const deleteTrip = async (id, data) => {\n  try {\n    const res = await apiServer.delete(`/trips/delete/${id}`, data);\n    return successStatus(res);\n  } catch (error) {\n    return internalServerError(error);\n  }\n};","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/services/tripsWs.js"],"names":["apiServer","internalServerError","successStatus","createTrip","data","res","post","error","getAllTrips","get","getOneTrip","id","getAllPlacesFromTrip","updateTrip","patch","deleteTrip","delete"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,oBAAnD;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,SAAS,CAACM,IAAV,CAAe,eAAf,EAAgCF,IAAhC,CAAlB;AACA,WAAOF,aAAa,CAACG,GAAD,CAApB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAON,mBAAmB,CAACM,KAAD,CAA1B;AACD;AACF,CAPM;AASP,OAAO,MAAMC,WAAW,GAAG,YAAY;AACrC,MAAI;AACF,UAAMH,GAAG,GAAG,MAAML,SAAS,CAACS,GAAV,CAAc,QAAd,CAAlB;AACA,WAAOP,aAAa,CAACG,GAAD,CAApB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAON,mBAAmB,CAACM,KAAD,CAA1B;AACD;AACF,CAPM;AASP,OAAO,MAAMG,UAAU,GAAG,OAAOC,EAAP,EAAWP,IAAX,KAAoB;AAC5C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,SAAS,CAACS,GAAV,CAAe,UAASE,EAAG,EAA3B,EAA8BP,IAA9B,CAAlB;AACA,WAAOF,aAAa,CAACG,GAAD,CAApB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAON,mBAAmB,CAACM,KAAD,CAA1B;AACD;AACF,CAPM;AASP,OAAO,MAAMK,oBAAoB,GAAG,OAAOD,EAAP,EAAWP,IAAX,KAAoB;AACtD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,SAAS,CAACS,GAAV,CAAe,UAASE,EAAG,SAA3B,EAAqCP,IAArC,CAAlB;AACA,WAAOF,aAAa,CAACG,GAAD,CAApB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAON,mBAAmB,CAACM,KAAD,CAA1B;AACD;AACF,CAPM;AASP,OAAO,MAAMM,UAAU,GAAG,OAAOF,EAAP,EAAWP,IAAX,KAAoB;AAC5C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,SAAS,CAACc,KAAV,CAAiB,iBAAgBH,EAAG,EAApC,EAAuCP,IAAvC,CAAlB;AACA,WAAOF,aAAa,CAACG,GAAD,CAApB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAON,mBAAmB,CAACM,KAAD,CAA1B;AACD;AACF,CAPM;AASP,OAAO,MAAMQ,UAAU,GAAG,OAAOJ,EAAP,EAAWP,IAAX,KAAoB;AAC5C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,SAAS,CAACgB,MAAV,CAAkB,iBAAgBL,EAAG,EAArC,EAAwCP,IAAxC,CAAlB;AACA,WAAOF,aAAa,CAACG,GAAD,CAApB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAON,mBAAmB,CAACM,KAAD,CAA1B;AACD;AACF,CAPM","sourcesContent":["import { apiServer } from '../api/ServerAPI';\r\nimport { internalServerError, successStatus } from '../utils/clear-res';\r\n\r\nexport const createTrip = async (data) => {\r\n  try {\r\n    const res = await apiServer.post('/trips/create', data);\r\n    return successStatus(res);\r\n  } catch (error) {\r\n    return internalServerError(error);\r\n  }\r\n};\r\n\r\nexport const getAllTrips = async () => {\r\n  try {\r\n    const res = await apiServer.get('/trips');\r\n    return successStatus(res);\r\n  } catch (error) {\r\n    return internalServerError(error);\r\n  }\r\n};\r\n\r\nexport const getOneTrip = async (id, data) => {\r\n  try {\r\n    const res = await apiServer.get(`/trips/${id}`, data);\r\n    return successStatus(res);\r\n  } catch (error) {\r\n    return internalServerError(error);\r\n  }\r\n};\r\n\r\nexport const getAllPlacesFromTrip = async (id, data) => {\r\n  try {\r\n    const res = await apiServer.get(`/trips/${id}/places`, data);\r\n    return successStatus(res);\r\n  } catch (error) {\r\n    return internalServerError(error);\r\n  }\r\n};\r\n\r\nexport const updateTrip = async (id, data) => {\r\n  try {\r\n    const res = await apiServer.patch(`/trips/update/${id}`, data);\r\n    return successStatus(res);\r\n  } catch (error) {\r\n    return internalServerError(error);\r\n  }\r\n};\r\n\r\nexport const deleteTrip = async (id, data) => {\r\n  try {\r\n    const res = await apiServer.delete(`/trips/delete/${id}`, data);\r\n    return successStatus(res);\r\n  } catch (error) {\r\n    return internalServerError(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}