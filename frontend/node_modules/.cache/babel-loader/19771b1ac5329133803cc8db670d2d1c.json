{"ast":null,"code":"import axios from \"axios\";\nexport const apiTravel = axios.create({\n  baseURL: \"https://travel-advisor.p.rapidapi.com\"\n});\napiTravel.defaults.headers.common[\"x-rapidapi-key\"] = 'process.env.REACT_APP_TRAVEL_API_KEY';\napiTravel.defaults.headers.common[\"x-rapidapi-host\"] = \"travel-advisor.p.rapidapi.com\";\nexport const getPlaces = async (type, sw, ne) => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await apiTravel.get(`/${type}/list-in-boundary`, {\n      params: {\n        bl_latitude: sw.lat,\n        bl_longitude: sw.lng,\n        tr_longitude: ne.lng,\n        tr_latitude: ne.lat\n      }\n    });\n    return data;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/api/TravelAPI.js"],"names":["axios","apiTravel","create","baseURL","defaults","headers","common","getPlaces","type","sw","ne","data","get","params","bl_latitude","lat","bl_longitude","lng","tr_longitude","tr_latitude","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AACpCC,EAAAA,OAAO,EAAE;AAD2B,CAAb,CAAlB;AAIPF,SAAS,CAACG,QAAV,CAAmBC,OAAnB,CAA2BC,MAA3B,CAAkC,gBAAlC,IACA,sCADA;AAEAL,SAAS,CAACG,QAAV,CAAmBC,OAAnB,CAA2BC,MAA3B,CAAkC,iBAAlC,IACE,+BADF;AAGA,OAAO,MAAMC,SAAS,GAAG,OAAOC,IAAP,EAAaC,EAAb,EAAiBC,EAAjB,KAAwB;AAC/C,MAAI;AACF,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAMV,SAAS,CAACW,GAAV,CAAe,IAAGJ,IAAK,mBAAvB,EAA2C;AACnDK,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAEL,EAAE,CAACM,GADV;AAENC,QAAAA,YAAY,EAAEP,EAAE,CAACQ,GAFX;AAGNC,QAAAA,YAAY,EAAER,EAAE,CAACO,GAHX;AAINE,QAAAA,WAAW,EAAET,EAAE,CAACK;AAJV;AAD2C,KAA3C,CAFV;AAUA,WAAOJ,IAAP;AACD,GAZD,CAYE,OAAOS,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAhBM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const apiTravel = axios.create({\r\n  baseURL: \"https://travel-advisor.p.rapidapi.com\",\r\n});\r\n\r\napiTravel.defaults.headers.common[\"x-rapidapi-key\"] =\r\n'process.env.REACT_APP_TRAVEL_API_KEY';\r\napiTravel.defaults.headers.common[\"x-rapidapi-host\"] =\r\n  \"travel-advisor.p.rapidapi.com\";\r\n\r\nexport const getPlaces = async (type, sw, ne) => {\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await apiTravel.get(`/${type}/list-in-boundary`, {\r\n      params: {\r\n        bl_latitude: sw.lat,\r\n        bl_longitude: sw.lng,\r\n        tr_longitude: ne.lng,\r\n        tr_latitude: ne.lat,\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}