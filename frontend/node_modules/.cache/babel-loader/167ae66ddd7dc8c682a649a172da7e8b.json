{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\pages\\\\Weather\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// src/pages/Weather.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { getWeatherForecast } from \"../../api/weatherAPI\";\nimport { SearchBox, WeatherCard, WeatherCardIntro } from \"../../components\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [coordinates, setCoordinates] = useState({});\n  const [weather, setWeather] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const data = await getWeatherForecast(coordinates.lat, coordinates.lon);\n        setWeather(data.daily);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n        setError(true);\n        setIsLoading(false);\n      }\n    };\n\n    if (coordinates.lat && coordinates.lon) {\n      fetchWeatherData();\n    }\n  }, [coordinates]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        setCoordinates: setCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        mt: 2,\n        children: !isLoading && weather.length > 0 ? weather.slice(0, 7).map((day, index) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n          day: day\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(WeatherCardIntro, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Weather, \"4rDY7CvM5WbCm5EUy4ZhmOB2EvU=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/pages/Weather/index.jsx"],"names":["React","useState","useEffect","getWeatherForecast","SearchBox","WeatherCard","WeatherCardIntro","Container","Box","Weather","coordinates","setCoordinates","weather","setWeather","isLoading","setIsLoading","error","setError","fetchWeatherData","data","lat","lon","daily","console","length","slice","map","day","index"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,gBAAjC,QAAyD,kBAAzD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMhB,kBAAkB,CAACO,WAAW,CAACU,GAAb,EAAkBV,WAAW,CAACW,GAA9B,CAArC;AACAR,QAAAA,UAAU,CAACM,IAAI,CAACG,KAAN,CAAV;AACAP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdO,QAAAA,OAAO,CAACP,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACAC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAVD;;AAYA,QAAIL,WAAW,CAACU,GAAZ,IAAmBV,WAAW,CAACW,GAAnC,EAAwC;AACtCH,MAAAA,gBAAgB;AACjB;AACF,GAhBQ,EAgBN,CAACR,WAAD,CAhBM,CAAT;AAkBA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,aAAa,EAAC,QAAlC;AAA2C,MAAA,UAAU,EAAC,QAAtD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,cAAc,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAC,MAA7B;AAAoC,QAAA,cAAc,EAAC,QAAnD;AAA4D,QAAA,EAAE,EAAE,CAAhE;AAAA,kBACG,CAACG,SAAD,IAAcF,OAAO,CAACY,MAAR,GAAiB,CAA/B,GACCZ,OAAO,CAACa,KAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,GAApB,CAAwB,CAACC,GAAD,EAAMC,KAAN,kBACtB,QAAC,WAAD;AAAyB,UAAA,GAAG,EAAED;AAA9B,WAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,gBAKC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxCD;;GAAMnB,O;;KAAAA,O;AA0CN,eAAeA,OAAf","sourcesContent":["// src/pages/Weather.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getWeatherForecast } from \"../../api/weatherAPI\";\r\nimport { SearchBox, WeatherCard, WeatherCardIntro } from \"../../components\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst Weather = () => {\r\n  const [coordinates, setCoordinates] = useState({});\r\n  const [weather, setWeather] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const data = await getWeatherForecast(coordinates.lat, coordinates.lon);\r\n        setWeather(data.daily);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching weather data:\", error);\r\n        setError(true);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (coordinates.lat && coordinates.lon) {\r\n      fetchWeatherData();\r\n    }\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n        <SearchBox setCoordinates={setCoordinates} />\r\n        <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" mt={2}>\r\n          {!isLoading && weather.length > 0 ? (\r\n            weather.slice(0, 7).map((day, index) => (\r\n              <WeatherCard key={index} day={day} />\r\n            ))\r\n          ) : (\r\n            <WeatherCardIntro />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n\r\n"]},"metadata":{},"sourceType":"module"}