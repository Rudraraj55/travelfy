{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\pages\\\\MyPlaces\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./MyPlaces.css\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getOneTrip, getAllPlacesFromTrip } from \"../../services/tripsWs\";\nimport { PlacesList, MapPlaces } from \"../../components\";\nimport { getUserWS } from \"../../services/authWs\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyPlaces(_ref) {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const [user, setUser] = useState(null); // Map\n\n  const [coordinates, setCoordinates] = useState({}); // Places from trip\n\n  const [places, setPlaces] = useState([]);\n  const [loadingPlaces, setLoadingPlaces] = useState(false); // Trip Details\n\n  const [trip, setTrip] = useState({}); // Loading Control\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  const verifyUser = async () => {\n    const response = await getUserWS();\n\n    if (response.status) {\n      setUser(response.data.user);\n    }\n  };\n\n  const getTripAndPlaces = async () => {\n    setIsLoading(true);\n    setLoadingPlaces(true);\n\n    try {\n      const trip = await getOneTrip(id); // For use it as title\n\n      if (trip) {\n        setTrip(trip.data.trip);\n      }\n\n      const placesInTrip = await getAllPlacesFromTrip(id); // For use it as places\n\n      if (placesInTrip) {\n        setPlaces(placesInTrip.data.places);\n        setCoordinates({\n          lat: placesInTrip.data.places[0].lat,\n          lng: placesInTrip.data.places[0].lng\n        });\n        setIsLoading(false);\n        setIsSaved(true); // To display delete button in place card\n      } else {\n        navigate(\"/mytrips\");\n      }\n\n      setIsLoading(false);\n      setLoadingPlaces(false);\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getTripAndPlaces();\n    verifyUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: \"myplaces-grid\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        className: \"search-box-grid\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          component: \"div\",\n          children: trip.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        mt: 1,\n        style: {\n          maxHeight: \"80vh\",\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(PlacesList, {\n          loadingPlaces: loadingPlaces,\n          places: places,\n          user: user,\n          isSaved: isSaved\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        className: \"map-grid\",\n        style: {\n          maxHeight: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          children: !isLoading && /*#__PURE__*/_jsxDEV(MapPlaces, {\n            coordinates: coordinates,\n            places: places,\n            zoom: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyPlaces, \"bl4Hhf3Jv7G6WDG3LORUhVdVER4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MyPlaces;\nexport default MyPlaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPlaces\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/pages/MyPlaces/index.jsx"],"names":["useParams","useNavigate","useEffect","useState","getOneTrip","getAllPlacesFromTrip","PlacesList","MapPlaces","getUserWS","CssBaseline","Paper","Grid","Typography","MyPlaces","props","user","setUser","coordinates","setCoordinates","places","setPlaces","loadingPlaces","setLoadingPlaces","trip","setTrip","isLoading","setIsLoading","isSaved","setIsSaved","id","navigate","verifyUser","response","status","data","getTripAndPlaces","placesInTrip","lat","lng","error","title","maxHeight","overflow"],"mappings":"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","sourcesContent":["import \"./MyPlaces.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getOneTrip, getAllPlacesFromTrip } from \"../../services/tripsWs\";\r\nimport { PlacesList, MapPlaces } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nfunction MyPlaces({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  // Map\r\n  const [coordinates, setCoordinates] = useState({});\r\n  // Places from trip\r\n  const [places, setPlaces] = useState([]);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n  // Trip Details\r\n  const [trip, setTrip] = useState({});\r\n  // Loading Control\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (response.status) {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  const getTripAndPlaces = async () => {\r\n    setIsLoading(true);\r\n    setLoadingPlaces(true);\r\n    try {\r\n      const trip = await getOneTrip(id); // For use it as title\r\n      if (trip) {\r\n        setTrip(trip.data.trip);\r\n      }\r\n      const placesInTrip = await getAllPlacesFromTrip(id); // For use it as places\r\n      if (placesInTrip) {\r\n        setPlaces(placesInTrip.data.places);\r\n        setCoordinates({\r\n          lat: placesInTrip.data.places[0].lat,\r\n          lng: placesInTrip.data.places[0].lng,\r\n        });\r\n        setIsLoading(false);\r\n        setIsSaved(true); // To display delete button in place card\r\n      } else {\r\n        navigate(\"/mytrips\");\r\n      }\r\n      setIsLoading(false);\r\n      setLoadingPlaces(false);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTripAndPlaces();\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container spacing={2} className=\"myplaces-grid\">\r\n        <Grid item xs={12} md={12} className=\"search-box-grid\">\r\n          <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n            {trip.title}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          mt={1}\r\n          style={{ maxHeight: \"80vh\", overflow: \"auto\" }}\r\n        >\r\n          <PlacesList\r\n            loadingPlaces={loadingPlaces}\r\n            places={places}\r\n            user={user}\r\n            isSaved={isSaved}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          className=\"map-grid\"\r\n          style={{ maxHeight: \"100%\" }}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            {!isLoading && (\r\n              <MapPlaces coordinates={coordinates} places={places} zoom={12} />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPlaces;\r\n"]},"metadata":{},"sourceType":"module"}