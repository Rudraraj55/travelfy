{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\pages\\\\Auth\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport Container from \"@mui/material/Container\";\nimport { Login, SignUp } from \"../../components\";\nimport { getUserWS } from \"../../services/authWs\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Auth(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isLoginPage = location.pathname === \"/login\";\n\n  const isAuthenticated = () => {\n    getUserWS().then(response => {\n      if (response.status) {\n        navigate(\"/mytrips\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          pb: 3\n        },\n        children: isLoginPage ? /*#__PURE__*/_jsxDEV(Login, {\n          authenticate: props.authenticate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(SignUp, {\n          authenticate: props.authenticate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Auth, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/pages/Auth/index.jsx"],"names":["Container","Login","SignUp","getUserWS","useNavigate","useLocation","useEffect","Paper","Auth","props","navigate","location","isLoginPage","pathname","isAuthenticated","then","response","status","pb","authenticate"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,WAAW,GAAGD,QAAQ,CAACE,QAAT,KAAsB,QAA1C;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BX,IAAAA,SAAS,GAAGY,IAAZ,CAAkBC,QAAD,IAAc;AAC7B,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnBP,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF,KAJD;AAKD,GAND;;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE;AAACI,UAAAA,EAAE,EAAE;AAAL,SAAX;AAAA,kBACGN,WAAW,gBAAG,QAAC,KAAD;AAAO,UAAA,YAAY,EAAEH,KAAK,CAACU;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAgD,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEV,KAAK,CAACU;AAA5B;AAAA;AAAA;AAAA;AAAA;AAD9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GA1BuBX,I;UACLJ,W,EACAC,W;;;KAFKG,I","sourcesContent":["import Container from \"@mui/material/Container\";\r\nimport { Login, SignUp } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nexport default function Auth(props) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isLoginPage = location.pathname === \"/login\";\r\n\r\n  const isAuthenticated = () => {\r\n    getUserWS().then((response) => {\r\n      if (response.status) {\r\n        navigate(\"/mytrips\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    isAuthenticated();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper sx={{pb: 3}}>\r\n          {isLoginPage ? <Login authenticate={props.authenticate}/> : <SignUp authenticate={props.authenticate} />}\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}