{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Home.css\";\nimport jsonData from \"../../assets/destinations.json\";\nimport jsonQuotes from \"../../assets/quotes.json\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { DestinationCard, SearchBox, HomeAddCard } from \"../../components\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport HomeBanner from \"../../assets/images/homebanner.jpg\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomePage(_ref) {\n  _s();\n\n  let {\n    user,\n    ...props\n  } = _ref;\n  const [coordinates, setCoordinates] = useState({});\n  const citiesData = [...jsonData];\n  const randomDestinations = citiesData.sort(() => 0.5 - Math.random()).slice(0, 4);\n  const quotes = [...jsonQuotes];\n  const getRandom = quotes[Math.floor(Math.random() * quotes.length)];\n  const navigate = useNavigate();\n\n  const handleSearch = () => {\n    if (coordinates.lat && coordinates.lng) {\n      navigate(\"/explore\", {\n        state: {\n          destinationCoordinates: {\n            lat: coordinates.lat,\n            lng: coordinates.lng\n          }\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    handleSearch();\n  }, [coordinates]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      maxWidth: \"xl\",\n      container: true,\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        item: true,\n        sx: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          height: 350,\n          maxWidth: \"100%\",\n          backgroundImage: `url(${HomeBanner})`,\n          mt: -1,\n          ml: 5\n        },\n        className: \"home-banner-box\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          item: true,\n          xs: 12,\n          sx: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              width: \"40%\",\n              p: 1,\n              minWidth: 250\n            },\n            children: /*#__PURE__*/_jsxDEV(SearchBox, {\n              setCoordinates: setCoordinates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            mt: 1,\n            children: getRandom.quote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        item: true,\n        sx: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          mt: 2,\n          ml: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(HomeAddCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          mt: 1,\n          children: \"Popular destinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          mt: 1,\n          ml: 5,\n          mb: 5\n        },\n        children: randomDestinations.map((destination, i) => /*#__PURE__*/_jsxDEV(DestinationCard, {\n          destination: destination\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomePage, \"Bmar2lCfbyT+/zIbvN4N7kLknps=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/pages/Home/index.jsx"],"names":["jsonData","jsonQuotes","useNavigate","useState","useEffect","DestinationCard","SearchBox","HomeAddCard","Box","Grid","HomeBanner","Paper","Typography","HomePage","user","props","coordinates","setCoordinates","citiesData","randomDestinations","sort","Math","random","slice","quotes","getRandom","floor","length","navigate","handleSearch","lat","lng","state","destinationCoordinates","display","flexWrap","flexDirection","justifyContent","mt","height","maxWidth","backgroundImage","ml","alignItems","width","p","minWidth","quote","mb","map","destination","i"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,kBAAxD;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,eAAe,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAoB;AACnD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMe,UAAU,GAAG,CAAC,GAAGlB,QAAJ,CAAnB;AACA,QAAMmB,kBAAkB,GAAGD,UAAU,CAClCE,IADwB,CACnB,MAAM,MAAMC,IAAI,CAACC,MAAL,EADO,EAExBC,KAFwB,CAElB,CAFkB,EAEf,CAFe,CAA3B;AAIA,QAAMC,MAAM,GAAG,CAAC,GAAGvB,UAAJ,CAAf;AACA,QAAMwB,SAAS,GAAGD,MAAM,CAACH,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,MAAL,KAAgBE,MAAM,CAACG,MAAlC,CAAD,CAAxB;AAEA,QAAMC,QAAQ,GAAG1B,WAAW,EAA5B;;AAEA,QAAM2B,YAAY,GAAG,MAAM;AACzB,QAAIb,WAAW,CAACc,GAAZ,IAAmBd,WAAW,CAACe,GAAnC,EAAwC;AACtCH,MAAAA,QAAQ,CAAC,UAAD,EAAa;AACnBI,QAAAA,KAAK,EAAE;AACLC,UAAAA,sBAAsB,EAAE;AACtBH,YAAAA,GAAG,EAAEd,WAAW,CAACc,GADK;AAEtBC,YAAAA,GAAG,EAAEf,WAAW,CAACe;AAFK;AADnB;AADY,OAAb,CAAR;AAQD;AACF,GAXD;;AAaA3B,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACb,WAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,QAAQ,EAAC,IADX;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,EAAE,EAAE;AACFkB,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,QAAQ,EAAE,MAFR;AAGFC,QAAAA,aAAa,EAAE,QAHb;AAIFC,QAAAA,cAAc,EAAE,QAJd;AAKFC,QAAAA,EAAE,EAAE;AALF,OAHN;AAAA,8BAWE,QAAC,GAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE;AACFJ,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,QAAQ,EAAE,MAFR;AAGFC,UAAAA,aAAa,EAAE,KAHb;AAIFC,UAAAA,cAAc,EAAE,QAJd;AAKFE,UAAAA,MAAM,EAAE,GALN;AAMFC,UAAAA,QAAQ,EAAE,MANR;AAOFC,UAAAA,eAAe,EAAG,OAAM/B,UAAW,GAPjC;AAQF4B,UAAAA,EAAE,EAAE,CAAC,CARH;AASFI,UAAAA,EAAE,EAAE;AATF,SAFN;AAaE,QAAA,SAAS,EAAC,iBAbZ;AAAA,+BAeE,QAAC,GAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,EAFN;AAGE,UAAA,EAAE,EAAE;AACFR,YAAAA,OAAO,EAAE,MADP;AAEFC,YAAAA,QAAQ,EAAE,MAFR;AAGFC,YAAAA,aAAa,EAAE,QAHb;AAIFC,YAAAA,cAAc,EAAE,QAJd;AAKFM,YAAAA,UAAU,EAAE,QALV;AAMFC,YAAAA,KAAK,EAAE;AANL,WAHN;AAAA,kCAYE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAE;AAAEA,cAAAA,KAAK,EAAE,KAAT;AAAgBC,cAAAA,CAAC,EAAE,CAAnB;AAAsBC,cAAAA,QAAQ,EAAE;AAAhC,aAAX;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,cAAc,EAAE7B;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAeE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,EAAE,EAAE,CAA7B;AAAA,sBACGQ,SAAS,CAACsB;AADb;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,cAXF,eA8CE,QAAC,GAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE;AACFb,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,QAAQ,EAAE,MAFR;AAGFC,UAAAA,aAAa,EAAE,QAHb;AAIFC,UAAAA,cAAc,EAAE,QAJd;AAKFM,UAAAA,UAAU,EAAE,QALV;AAMFL,UAAAA,EAAE,EAAE,CANF;AAOFI,UAAAA,EAAE,EAAE;AAPF,SAFN;AAAA,gCAYE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,eA+DE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,EAAE,EAAE;AACFR,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,QAAQ,EAAE,MAFR;AAGFC,UAAAA,aAAa,EAAE,KAHb;AAIFC,UAAAA,cAAc,EAAE,QAJd;AAKFC,UAAAA,EAAE,EAAE,CALF;AAMFI,UAAAA,EAAE,EAAE,CANF;AAOFM,UAAAA,EAAE,EAAE;AAPF,SAHN;AAAA,kBAaG7B,kBAAkB,CAAC8B,GAAnB,CAAuB,CAACC,WAAD,EAAcC,CAAd,kBACtB,QAAC,eAAD;AAAiB,UAAA,WAAW,EAAED;AAA9B,WAAgDC,CAAhD;AAAA;AAAA;AAAA;AAAA,gBADD;AAbH;AAAA;AAAA;AAAA;AAAA,cA/DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqFD;;GAnHuBtC,Q;UAWLX,W;;;KAXKW,Q","sourcesContent":["import \"./Home.css\";\r\nimport jsonData from \"../../assets/destinations.json\";\r\nimport jsonQuotes from \"../../assets/quotes.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DestinationCard, SearchBox, HomeAddCard } from \"../../components\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport HomeBanner from \"../../assets/images/homebanner.jpg\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function HomePage({ user, ...props }) {\r\n  const [coordinates, setCoordinates] = useState({});\r\n\r\n  const citiesData = [...jsonData];\r\n  const randomDestinations = citiesData\r\n    .sort(() => 0.5 - Math.random())\r\n    .slice(0, 4);\r\n\r\n  const quotes = [...jsonQuotes];\r\n  const getRandom = quotes[Math.floor(Math.random() * quotes.length)];\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (coordinates.lat && coordinates.lng) {\r\n      navigate(\"/explore\", {\r\n        state: {\r\n          destinationCoordinates: {\r\n            lat: coordinates.lat,\r\n            lng: coordinates.lng,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        maxWidth=\"xl\"\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          mt: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          item\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            height: 350,\r\n            maxWidth: \"100%\",\r\n            backgroundImage: `url(${HomeBanner})`,\r\n            mt: -1,\r\n            ml: 5,\r\n          }}\r\n          className=\"home-banner-box\"\r\n        >\r\n          <Box\r\n            item\r\n            xs={12}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Paper sx={{ width: \"40%\", p: 1, minWidth: 250 }}>\r\n              <SearchBox setCoordinates={setCoordinates} />\r\n            </Paper>\r\n            <Typography variant=\"h6\" mt={1}>\r\n              {getRandom.quote}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          item\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            mt: 2,\r\n            ml: 5,\r\n          }}\r\n        >\r\n          <HomeAddCard />\r\n          <Typography variant=\"h5\" mt={1}>\r\n            Popular destinations\r\n          </Typography>\r\n        </Box>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            mt: 1,\r\n            ml: 5,\r\n            mb: 5,\r\n          }}\r\n        >\r\n          {randomDestinations.map((destination, i) => (\r\n            <DestinationCard destination={destination} key={i} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}