{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\components\\\\Map\\\\MapPlaces.jsx\";\nimport \"./Map.css\";\nimport GoogleMapReact from \"google-map-react\";\nimport PlaceMarker from \"../PlaceMarker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MapPlaces = _ref => {\n  let {\n    places,\n    coordinates,\n    setCoordinates,\n    setLimits,\n    zoom\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\n          libraries: ['places', 'geometry', 'drawing']\n        } // Map Style (Google Developers Plattaform)\n        ,\n        mapId: process.env.REACT_MAP_GOOGLE_MAP_ID,\n        center: coordinates,\n        defaultZoom: zoom,\n        options: {\n          disableDefaultUI: true,\n          zoomControl: true\n        },\n        children: places.map((place, i) => /*#__PURE__*/_jsxDEV(PlaceMarker, {\n          lat: place.latitude ? place.latitude : place.lat,\n          lng: place.longitude ? place.longitude : place.lng,\n          place: place\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = MapPlaces;\nexport default MapPlaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPlaces\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/components/Map/MapPlaces.jsx"],"names":["GoogleMapReact","PlaceMarker","MapPlaces","places","coordinates","setCoordinates","setLimits","zoom","key","process","env","REACT_APP_GOOGLE_MAP_API_KEY","libraries","REACT_MAP_GOOGLE_MAP_ID","disableDefaultUI","zoomControl","map","place","i","latitude","lat","longitude","lng"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;;AAEA,MAAMC,SAAS,GAAG,QAA8D;AAAA,MAA7D;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,cAAvB;AAAuCC,IAAAA,SAAvC;AAAkDC,IAAAA;AAAlD,GAA6D;AAC9E,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,4BAAnB;AAAiDC,UAAAA,SAAS,EAAC,CAAC,QAAD,EAAU,UAAV,EAAqB,SAArB;AAA3D,SADpB,CAEE;AAFF;AAGE,QAAA,KAAK,EAAEH,OAAO,CAACC,GAAR,CAAYG,uBAHrB;AAIE,QAAA,MAAM,EAAET,WAJV;AAKE,QAAA,WAAW,EAAEG,IALf;AAME,QAAA,OAAO,EAAE;AAAEO,UAAAA,gBAAgB,EAAE,IAApB;AAA0BC,UAAAA,WAAW,EAAE;AAAvC,SANX;AAAA,kBAQGZ,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACV,QAAC,WAAD;AACE,UAAA,GAAG,EAAED,KAAK,CAACE,QAAN,GAAiBF,KAAK,CAACE,QAAvB,GAAkCF,KAAK,CAACG,GAD/C;AAEE,UAAA,GAAG,EAAEH,KAAK,CAACI,SAAN,GAAkBJ,KAAK,CAACI,SAAxB,GAAoCJ,KAAK,CAACK,GAFjD;AAIE,UAAA,KAAK,EAAEL;AAJT,WAGOC,CAHP;AAAA;AAAA;AAAA;AAAA,gBADD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CAxBD;;KAAMhB,S;AA0BN,eAAeA,SAAf","sourcesContent":["import \"./Map.css\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport PlaceMarker from \"../PlaceMarker\";\r\n\r\nconst MapPlaces = ({ places, coordinates, setCoordinates, setLimits, zoom }) => {\r\n  return (\r\n    <>\r\n      <div className=\"map-wrapper\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAP_API_KEY, libraries:['places','geometry','drawing'] }}\r\n          // Map Style (Google Developers Plattaform)\r\n          mapId={process.env.REACT_MAP_GOOGLE_MAP_ID}\r\n          center={coordinates}\r\n          defaultZoom={zoom}\r\n          options={{ disableDefaultUI: true, zoomControl: true }}\r\n        >\r\n          {places.map((place, i) => (\r\n            <PlaceMarker\r\n              lat={place.latitude ? place.latitude : place.lat}\r\n              lng={place.longitude ? place.longitude : place.lng}\r\n              key={i}\r\n              place={place}\r\n            />\r\n          ))}\r\n        </GoogleMapReact>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapPlaces;\r\n"]},"metadata":{},"sourceType":"module"}