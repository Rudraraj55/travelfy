{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\components\\\\ChangePasswordForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { changePasswordWS } from \"../../services/authWs\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport LockRoundedIcon from \"@mui/icons-material/LockRounded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangePasswordForm = _ref => {\n  _s();\n\n  let {\n    user,\n    ...props\n  } = _ref;\n  const [values, setValues] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    showPassword: false\n  });\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n    setMessage(null);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleFormSubmission = event => {\n    event.preventDefault();\n\n    try {\n      changePasswordWS(values).then(response => {\n        if (response.status) {\n          setMessage(response.data.message);\n          setError(null);\n        } else {\n          setError(response.errorMessage);\n        }\n      });\n    } catch (error) {\n      setError(error.errorMessage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 400,\n        display: \"flex\",\n        flexDirection: \"column\",\n        mt: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmission,\n          children: [/*#__PURE__*/_jsxDEV(LockRoundedIcon, {\n            fontSize: \"large\",\n            color: \"primary\",\n            sx: {\n              mt: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            component: \"div\",\n            sx: {\n              mb: 3\n            },\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              width: \"30ch\"\n            },\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-password\",\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-password\",\n              type: values.showPassword ? \"text\" : \"password\",\n              value: values.oldPassword,\n              autoComplete: \"password\",\n              name: \"oldPassword\",\n              onChange: handleChange,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this),\n              label: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              mt: 3,\n              width: \"30ch\"\n            },\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-password\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-password\",\n              type: values.showPassword ? \"text\" : \"password\",\n              value: values.newPassword,\n              autoComplete: \"new-password\",\n              name: \"newPassword\",\n              onChange: handleChange,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this),\n              label: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              width: \"30ch\"\n            },\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-password\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-password\",\n              type: values.showPassword ? \"text\" : \"password\",\n              value: values.confirmPassword,\n              autoComplete: \"confirm-password\",\n              name: \"confirmPassword\",\n              onChange: handleChange,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this),\n              label: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), error ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChangePasswordForm, \"lxp3wCLGqJz6M+kJxrw6Mi1rVoE=\");\n\n_c = ChangePasswordForm;\nexport default ChangePasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordForm\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/components/ChangePasswordForm/index.jsx"],"names":["useState","changePasswordWS","Button","Paper","IconButton","Box","Typography","InputLabel","FormControl","Visibility","VisibilityOff","OutlinedInput","InputAdornment","LockRoundedIcon","ChangePasswordForm","user","props","values","setValues","oldPassword","newPassword","confirmPassword","showPassword","error","setError","message","setMessage","handleChange","event","target","name","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","handleFormSubmission","then","response","status","data","errorMessage","maxWidth","display","flexDirection","mt","width","mb","m"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { changePasswordWS } from \"../../services/authWs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport LockRoundedIcon from \"@mui/icons-material/LockRounded\";\r\n\r\nconst ChangePasswordForm = ({ user, ...props }) => {\r\n  const [values, setValues] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setMessage(null);\r\n    setError(null);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleFormSubmission = (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      changePasswordWS(values).then((response) => {\r\n        if (response.status) {\r\n          setMessage(response.data.message);\r\n          setError(null);\r\n        } else {\r\n          setError(response.errorMessage);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      setError(error.errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          maxWidth: 400,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          mt: 5,\r\n        }}\r\n      >\r\n        <Paper sx={{ width: 400 }}>\r\n          <form onSubmit={handleFormSubmission}>\r\n            <LockRoundedIcon fontSize=\"large\" color=\"primary\" sx={{ mt: 3 }} />\r\n            <Typography\r\n              variant=\"h5\"\r\n              gutterBottom\r\n              component=\"div\"\r\n              sx={{ mb: 3 }}\r\n            >\r\n              Change Password\r\n            </Typography>\r\n            <FormControl sx={{ m: 1, width: \"30ch\" }} variant=\"outlined\">\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                Current Password\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.oldPassword}\r\n                autoComplete=\"password\"\r\n                name=\"oldPassword\"\r\n                onChange={handleChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                label=\"Password\"\r\n              />\r\n            </FormControl>\r\n            <FormControl sx={{ mt: 3, width: \"30ch\" }} variant=\"outlined\">\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                New Password\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.newPassword}\r\n                autoComplete=\"new-password\"\r\n                name=\"newPassword\"\r\n                onChange={handleChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                label=\"Password\"\r\n              />\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: \"30ch\" }} variant=\"outlined\">\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                Confirm Password\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.confirmPassword}\r\n                autoComplete=\"confirm-password\"\r\n                name=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                label=\"Password\"\r\n              />\r\n            </FormControl>\r\n            <Box sx={{ m: 2 }}>\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                Save\r\n              </Button>\r\n            </Box>\r\n            {error ? (\r\n              <Box sx={{ m: 2 }}>\r\n                <Typography variant=\"body2\" color=\"error\">\r\n                  {error}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{ m: 2 }}>\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                  {message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n"]},"metadata":{},"sourceType":"module"}