{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\pages\\\\Explore\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Explore.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getPlaces } from \"../../api/TravelAPI\";\nimport { PlacesList, Map, SearchBox, Filters } from \"../../components\";\nimport { getUserWS } from \"../../services/authWs\"; // Material UI\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Explore(_ref) {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [coordinates, setCoordinates] = useState({}); // Map Limits (NorthEast and SouthWest)\n\n  const [limits, setLimits] = useState(); // Places list\n\n  const [places, setPlaces] = useState([]); // To use for filter places\n\n  const [type, setType] = useState(\"attractions\");\n  const [rating, setRating] = useState(3); // Loading Control\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\n  const location = useLocation();\n\n  const verifyUser = async () => {\n    const response = await getUserWS();\n\n    if (response.status) {\n      setUser(response.data.user);\n    }\n  };\n\n  const defaultGeoLocation = async () => {\n    setIsLoading(true);\n\n    try {\n      const destinationFromHome = location.state; // Check Location State\n\n      if (destinationFromHome) {\n        const destinationCoordinates = destinationFromHome.destinationCoordinates; // Get Destination coordinates\n\n        setCoordinates({\n          lat: destinationCoordinates.lat,\n          lng: destinationCoordinates.lng\n        });\n        setIsLoading(false);\n      } else {\n        const defaultCoords = {\n          lat: 48.856614,\n          lng: 2.3522219\n        }; // \"Paris, France\" as default\n\n        setCoordinates(defaultCoords);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    defaultGeoLocation();\n    verifyUser();\n  }, []); // Get places from API\n\n  useEffect(() => {\n    if (limits) {\n      setLoadingPlaces(true);\n      getPlaces(type, limits.sw, limits.ne).then(data => {\n        const places = data.filter(place => place.name && place.rating > rating);\n        setPlaces(places);\n        setLoadingPlaces(false);\n      });\n    }\n  }, [limits, type, rating]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"search-filter-grid\",\n        spacing: 2,\n        sx: {\n          ml: 9\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          mt: 1,\n          className: \"search-box-grid\",\n          sx: {\n            width: 300,\n            mt: 2,\n            pr: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(SearchBox, {\n            setCoordinates: setCoordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          mt: 1,\n          className: \"filter-explore-grid\",\n          sx: {\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Filters, {\n            type: type,\n            setType: setType,\n            rating: rating,\n            setRating: setRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        mt: 1,\n        style: {\n          maxHeight: \"75vh\",\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(PlacesList, {\n          loadingPlaces: loadingPlaces,\n          places: places,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        className: \"map-grid\",\n        style: {\n          maxHeight: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          children: !isLoading && /*#__PURE__*/_jsxDEV(Map, {\n            coordinates: coordinates,\n            setLimits: setLimits,\n            setCoordinates: setCoordinates,\n            places: places,\n            zoom: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Explore, \"Z+aydFZ+AbftnwnR3IIjerKHt4c=\", false, function () {\n  return [useLocation];\n});\n\n_c = Explore;\nexport default Explore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/pages/Explore/index.jsx"],"names":["useLocation","useState","useEffect","getPlaces","PlacesList","Map","SearchBox","Filters","getUserWS","CssBaseline","Paper","Grid","Explore","props","user","setUser","coordinates","setCoordinates","limits","setLimits","places","setPlaces","type","setType","rating","setRating","isLoading","setIsLoading","loadingPlaces","setLoadingPlaces","location","verifyUser","response","status","data","defaultGeoLocation","destinationFromHome","state","destinationCoordinates","lat","lng","defaultCoords","error","sw","ne","then","filter","place","name","ml","width","mt","pr","justifyContent","maxHeight","overflow"],"mappings":"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","sourcesContent":["import \"./Explore.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getPlaces } from \"../../api/TravelAPI\";\r\nimport { PlacesList, Map, SearchBox, Filters } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\n// Material UI\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction Explore({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  const [coordinates, setCoordinates] = useState({});\r\n  // Map Limits (NorthEast and SouthWest)\r\n  const [limits, setLimits] = useState();\r\n  // Places list\r\n  const [places, setPlaces] = useState([]);\r\n  // To use for filter places\r\n  const [type, setType] = useState(\"attractions\");\r\n  const [rating, setRating] = useState(3);\r\n  // Loading Control\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (response.status) {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  const defaultGeoLocation = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const destinationFromHome = location.state; // Check Location State\r\n      if (destinationFromHome) {\r\n        const destinationCoordinates =\r\n          destinationFromHome.destinationCoordinates; // Get Destination coordinates\r\n        setCoordinates({\r\n          lat: destinationCoordinates.lat,\r\n          lng: destinationCoordinates.lng,\r\n        });\r\n        setIsLoading(false);\r\n      } else {\r\n        const defaultCoords = { lat: 48.856614, lng: 2.3522219 }; // \"Paris, France\" as default\r\n        setCoordinates(defaultCoords);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    defaultGeoLocation();\r\n    verifyUser();\r\n  }, []);\r\n\r\n  // Get places from API\r\n  useEffect(() => {\r\n    if (limits) {\r\n      setLoadingPlaces(true);\r\n      getPlaces(type, limits.sw, limits.ne).then((data) => {\r\n        const places = data.filter(\r\n          (place) => place.name && place.rating > rating\r\n        );\r\n        setPlaces(places);\r\n        setLoadingPlaces(false);\r\n      });\r\n    }\r\n  }, [limits, type, rating]);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          container\r\n          className=\"search-filter-grid\"\r\n          spacing={2}\r\n          sx={{ ml: 9 }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            mt={1}\r\n            className=\"search-box-grid\"\r\n            sx={{ width: 300, mt: 2, pr: 2 }}\r\n          >\r\n            <SearchBox setCoordinates={setCoordinates} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            mt={1}\r\n            className=\"filter-explore-grid\"\r\n            sx={{ justifyContent: \"center\" }}\r\n          >\r\n            <Filters\r\n              type={type}\r\n              setType={setType}\r\n              rating={rating}\r\n              setRating={setRating}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          mt={1}\r\n          style={{ maxHeight: \"75vh\", overflow: \"auto\" }}\r\n        >\r\n          <PlacesList\r\n            loadingPlaces={loadingPlaces}\r\n            places={places}\r\n            user={user}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          className=\"map-grid\"\r\n          style={{ maxHeight: \"100%\" }}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            {!isLoading && (\r\n              <Map\r\n                coordinates={coordinates}\r\n                setLimits={setLimits}\r\n                setCoordinates={setCoordinates}\r\n                places={places}\r\n                zoom={14}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n"]},"metadata":{},"sourceType":"module"}