{"ast":null,"code":"var _jsxFileName = \"D:\\\\Itinerary Planner\\\\frontend\\\\src\\\\components\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Login.css\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginWS } from \"../../services/authWs\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Typography from \"@mui/material/Typography\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    email,\n    password\n  } = values;\n\n  const handleChange = event => {\n    setError(null);\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmitSignUp = () => {\n    navigate(\"/signup\");\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const credentials = {\n        email,\n        password\n      };\n      const {\n        data,\n        status,\n        errorMessage\n      } = await loginWS(credentials);\n\n      if (status) {\n        navigate(\"/mytrips\");\n        props.authenticate(data.user);\n        return data;\n      } else {\n        setError(errorMessage);\n      }\n    } catch (error) {\n      setError(error.errorMessage);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n      fontSize: \"large\",\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      component: \"div\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-helperText\",\n        label: \"Email\",\n        value: email,\n        onChange: handleChange,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        },\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-input-field\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-password-input\",\n          style: {\n            width: \"43%\"\n          },\n          label: \"Password\",\n          value: password,\n          type: \"password\",\n          onChange: handleChange,\n          name: \"password\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSubmitSignUp,\n            children: \"Don't have an account? Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"error\",\n          children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-block\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"uMhTjP7sXU5V6d671Z/ePdaQtO8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Itinerary Planner/frontend/src/components/Login/index.jsx"],"names":["useState","useNavigate","loginWS","Button","TextField","AccountCircle","InputAdornment","Typography","AccountCircleIcon","Login","props","values","setValues","email","password","error","setError","navigate","handleChange","event","target","name","value","handleSubmitSignUp","handleSubmit","e","preventDefault","credentials","data","status","errorMessage","authenticate","user","startAdornment","width"],"mappings":"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","sourcesContent":["import \"./Login.css\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginWS } from \"../../services/authWs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n\r\nconst Login = (props) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const { email, password } = values;\r\n\r\n  const handleChange = (event) => {\r\n    setError(null);\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitSignUp = () => {\r\n    navigate(\"/signup\");\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      const credentials = {\r\n        email,\r\n        password,\r\n      };\r\n\r\n      const { data, status, errorMessage } = await loginWS(credentials);\r\n      if (status) {\r\n        navigate(\"/mytrips\");\r\n        props.authenticate(data.user)\r\n        return data;\r\n      } else {\r\n        setError(errorMessage);\r\n      }\r\n    } catch (error) {\r\n      setError(error.errorMessage);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <AccountCircleIcon fontSize=\"large\" color=\"primary\" />\r\n      <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n        Login\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          id=\"outlined-helperText\"\r\n          label=\"Email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          name=\"email\"\r\n        />\r\n        <div className=\"auth-input-field\">\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            style={{ width: \"43%\" }}\r\n            label=\"Password\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={handleChange}\r\n            name=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n        </div>\r\n        <div className=\"submit-button\">\r\n          <Button variant=\"contained\" onClick={handleSubmit}>\r\n            Login\r\n          </Button>\r\n          <div className=\"signup-button\">\r\n            <Button variant=\"contained\" onClick={handleSubmitSignUp}>\r\n              Don't have an account? Sign up\r\n            </Button>\r\n          </div>\r\n          <Typography variant=\"body2\" color=\"error\">\r\n            {error && (\r\n              <div className=\"error-block\">\r\n                <p>{error}</p>\r\n              </div>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}